name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.19', '22']
        include:
          - node-version: '20.19'
            primary: true
          - node-version: '22'
            primary: false
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Lint
        if: matrix.primary
        run: pnpm lint

      - name: Type check
        if: matrix.primary
        run: pnpm typecheck

      - name: Test
        run: pnpm test:run

      - name: Coverage
        if: matrix.primary
        run: pnpm coverage

      - name: Format check
        if: matrix.primary
        run: pnpm format:check

      - name: Get Playwright version
        if: matrix.primary
        id: playwright-version
        run: echo "version=$(pnpm --filter trace-viz-example exec playwright --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        if: matrix.primary
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}

      - name: Install Playwright
        if: matrix.primary
        run: pnpm --filter trace-viz-example exec playwright install --with-deps chromium

      - name: E2E Tests
        if: matrix.primary
        run: pnpm --filter trace-viz-example test:e2e

      - name: Pack dry run
        if: matrix.primary
        run: pnpm pack:dry
